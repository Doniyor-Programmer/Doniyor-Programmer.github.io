{"version":3,"file":"static/js/548.5cbab1ee.chunk.js","mappings":"oOAyEA,EAjEmB,WACjB,OAAoCA,EAAAA,EAAAA,UAAS,IAAG,eAAzCC,EAAU,KAAEC,EAAa,KAChC,GAA4CF,EAAAA,EAAAA,WAAS,GAAM,eAApDG,EAAc,KAAEC,EAAiB,KACxC,GAA4BJ,EAAAA,EAAAA,UAAS,GAAE,eAAhCK,EAAM,KAAEC,EAAS,KACxB,GAAsCN,EAAAA,EAAAA,WAAS,GAAM,eAA9CO,EAAW,KAAEC,EAAc,KAElC,GAA4CC,EAAAA,EAAAA,KAArCC,EAAY,EAAZA,aAAcC,EAAO,EAAPA,QAASC,EAAU,EAAVA,YAE9BC,EAAAA,EAAAA,YAAU,WACRC,EAAUT,GAAQ,EACpB,GAAG,IAEH,IAAMS,EAAY,SAACT,EAAQU,GACfX,GAAVW,GACAL,EAAaL,GACVW,KAAKC,GACLD,MAAK,kBAAMJ,EAAW,YAAY,GACvC,EAEMK,EAAqB,SAAAC,GACzB,IAAIC,GAAQ,EACRD,EAAcE,OAAS,IACzBD,GAAQ,GAEVjB,EAAc,GAAD,eAAKD,IAAU,OAAKiB,KACjCd,GAAkB,GAClBE,EAAUD,EAAS,GACnBG,EAAeW,EACjB,EAsBA,OACE,iBAAKE,UAAU,eAAc,WAC1BC,EAAAA,EAAAA,GAAYX,GAAS,kBAtB1B,SAAqBY,GACnB,IAAMC,EAAQD,EAAIE,KAAI,SAACC,EAAMC,GAC3B,OACE,eAAIN,UAAU,eAAc,UAC1B,UAAC,KAAI,CAACO,GAAE,kBAAaF,EAAKG,IAAK,WAC7B,gBACEC,IAAKJ,EAAKK,UACVC,IAAKN,EAAKO,MACVZ,UAAU,sBAEZ,gBAAKA,UAAU,oBAAmB,SAAEK,EAAKO,SACzC,gBAAKZ,UAAU,qBAAoB,SAAEK,EAAKQ,YARZP,EAYtC,IAEA,OAAO,eAAIN,UAAU,eAAc,SAAEG,GACvC,CAIgCW,CAAYlC,EAAW,GAAEE,IACrD,mBACEiC,SAAUjC,EACVkC,MAAO,CAACC,QAAS/B,EAAc,OAAS,SACxCc,UAAU,mCACVkB,QAAS,kBAAMzB,EAAUT,EAAO,EAAC,UAEjC,gBAAKgB,UAAU,QAAO,2BAI9B,E,UClCA,EAhCmB,WACjB,OACE,iCACE,UAACmB,EAAA,EAAM,YACL,iBAAMC,KAAK,cAAcC,QAAQ,kCACjC,4CACA,iBAAMD,KAAK,WAAWC,QAAQ,iBAC9B,iBAAMD,KAAK,SAASC,QAAQ,wBAC5B,iBAAMD,KAAK,QAAQC,QAAQ,iBAC3B,iBAAMC,SAAS,UAAUD,QAAQ,aACjC,iBACEC,SAAS,SACTD,QAAQ,mEAEV,iBAAMC,SAAS,WAAWD,QAAQ,iBAClC,iBAAMC,SAAS,iBAAiBD,QAAQ,iBACxC,iBAAMC,SAAS,WAAWD,QAAQ,MAClC,iBAAMC,SAAS,eAAeD,QAAQ,yBACtC,iBACEC,SAAS,cACTD,QAAQ,mEAEV,iBAAMC,SAAS,gBAAgBD,QAAQ,iBACvC,iBAAMC,SAAS,sBAAsBD,QAAQ,iBAC7C,iBAAMC,SAAS,gBAAgBD,QAAQ,SAEzC,SAACE,EAAA,EAAS,KACV,SAAC,EAAU,MAGjB,C,iFC/Be,SAASC,EAAmBtB,GACzC,OCJa,SAA4BA,GACzC,GAAIuB,MAAMC,QAAQxB,GAAM,OAAO,EAAAyB,EAAA,GAAiBzB,EAClD,CDES,CAAkBA,IELZ,SAA0B0B,GACvC,GAAsB,qBAAXC,QAAmD,MAAzBD,EAAKC,OAAOC,WAA2C,MAAtBF,EAAK,cAAuB,OAAOH,MAAMM,KAAKH,EACtH,CFGmC,CAAgB1B,KAAQ,EAAA8B,EAAA,GAA2B9B,IGLvE,WACb,MAAM,IAAI+B,UAAU,uIACtB,CHG8F,EAC9F,C","sources":["components/comicsList/ComicsList.js","components/pages/ComicsPage.js","../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js"],"sourcesContent":["import {useState, useEffect} from \"react\";\nimport {Link} from \"react-router-dom\";\n\nimport useMarvelService from \"../../services/MarvelService\";\nimport {setContent2} from \"../../utils/setContent\";\n\nimport \"./comicsList.scss\";\n\nconst ComicsList = () => {\n  const [comicsList, setComicsList] = useState([]);\n  const [newItemLoading, setnewItemLoading] = useState(false);\n  const [offset, setOffset] = useState(0);\n  const [comicsEnded, setComicsEnded] = useState(false);\n\n  const {getAllComics, process, setProcess} = useMarvelService();\n\n  useEffect(() => {\n    onRequest(offset, true);\n  }, []);\n\n  const onRequest = (offset, initial) => {\n    initial ? setnewItemLoading(false) : setnewItemLoading(true);\n    getAllComics(offset)\n      .then(onComicsListLoaded)\n      .then(() => setProcess(\"confirmed\"));\n  };\n\n  const onComicsListLoaded = newComicsList => {\n    let ended = false;\n    if (newComicsList.length < 8) {\n      ended = true;\n    }\n    setComicsList([...comicsList, ...newComicsList]);\n    setnewItemLoading(false);\n    setOffset(offset + 8);\n    setComicsEnded(ended);\n  };\n\n  function renderItems(arr) {\n    const items = arr.map((item, i) => {\n      return (\n        <li className=\"comics__item\" key={i}>\n          <Link to={`/comics/${item.id}`}>\n            <img\n              src={item.thumbnail}\n              alt={item.title}\n              className=\"comics__item-img\"\n            />\n            <div className=\"comics__item-name\">{item.title}</div>\n            <div className=\"comics__item-price\">{item.price}</div>\n          </Link>\n        </li>\n      );\n    });\n\n    return <ul className=\"comics__grid\">{items}</ul>;\n  }\n\n  return (\n    <div className=\"comics__list\">\n      {setContent2(process, () => renderItems(comicsList), newItemLoading)}\n      <button\n        disabled={newItemLoading}\n        style={{display: comicsEnded ? \"none\" : \"block\"}}\n        className=\"button button__main button__long\"\n        onClick={() => onRequest(offset)}\n      >\n        <div className=\"inner\">load more</div>\n      </button>\n    </div>\n  );\n};\n\nexport default ComicsList;\n","import {Helmet} from \"react-helmet\";\n\nimport ComicsList from \"../comicsList/ComicsList\";\nimport AppBanner from \"../appBanner/AppBanner\";\n\nconst ComicsPage = () => {\n  return (\n    <>\n      <Helmet>\n        <meta name=\"description\" content=\"Page with list of our comics\" />\n        <title>Comics page</title>\n        <meta name=\"keywords\" content=\"Comics page\" />\n        <meta name=\"author\" content=\"Doniyor-Programmer\" />\n        <meta name=\"title\" content=\"Comics page\" />\n        <meta property=\"og:type\" content=\"website\" />\n        <meta\n          property=\"og:url\"\n          content=\"https://doniyor-programmer.github.io/marvel/index.html/comics\"\n        />\n        <meta property=\"og:title\" content=\"Comics page\" />\n        <meta property=\"og:description\" content=\"Comics page\" />\n        <meta property=\"og:image\" content=\"\" />\n        <meta property=\"twitter:card\" content=\"summary_large_image\" />\n        <meta\n          property=\"twitter:url\"\n          content=\"https://doniyor-programmer.github.io/marvel/index.html/comics\"\n        />\n        <meta property=\"twitter:title\" content=\"Comics page\" />\n        <meta property=\"twitter:description\" content=\"Comics page\" />\n        <meta property=\"twitter:image\" content=\"\" />\n      </Helmet>\n      <AppBanner />\n      <ComicsList />\n    </>\n  );\n};\n\nexport default ComicsPage;\n","import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}"],"names":["useState","comicsList","setComicsList","newItemLoading","setnewItemLoading","offset","setOffset","comicsEnded","setComicsEnded","useMarvelService","getAllComics","process","setProcess","useEffect","onRequest","initial","then","onComicsListLoaded","newComicsList","ended","length","className","setContent2","arr","items","map","item","i","to","id","src","thumbnail","alt","title","price","renderItems","disabled","style","display","onClick","Helmet","name","content","property","AppBanner","_toConsumableArray","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","from","unsupportedIterableToArray","TypeError"],"sourceRoot":""}